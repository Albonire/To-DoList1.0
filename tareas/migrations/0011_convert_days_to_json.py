# Generated by Django 5.0.7 on 2025-07-19 14:29

from django.db import migrations
import json

def convert_days_to_json(apps, schema_editor):
    Task = apps.get_model('tareas', 'Task')
    for task in Task.objects.all():
        # Convertir dia_semana
        if task.dia_semana and isinstance(task.dia_semana, str) and task.dia_semana.strip():
            try:
                # Intentar decodificar por si ya es un JSON string
                json.loads(task.dia_semana)
            except json.JSONDecodeError:
                # Si no es un JSON string, asumimos que es el formato antiguo
                task.dia_semana = json.dumps([task.dia_semana])

        # Convertir scheduled_dia_semana
        if task.scheduled_dia_semana and isinstance(task.scheduled_dia_semana, str) and task.scheduled_dia_semana.strip():
            try:
                json.loads(task.scheduled_dia_semana)
            except json.JSONDecodeError:
                task.scheduled_dia_semana = json.dumps([task.scheduled_dia_semana])
        
        task.save()

def convert_json_to_days(apps, schema_editor):
    Task = apps.get_model('tareas', 'Task')
    for task in Task.objects.all():
        # Revertir dia_semana
        if task.dia_semana and isinstance(task.dia_semana, str):
            try:
                data = json.loads(task.dia_semana)
                if isinstance(data, list) and len(data) > 0:
                    task.dia_semana = data[0]
                else:
                    task.dia_semana = None # O un valor por defecto apropiado
            except (json.JSONDecodeError, TypeError):
                # Si no se puede decodificar, podrÃ­a ser ya un string simple
                pass

        # Revertir scheduled_dia_semana
        if task.scheduled_dia_semana and isinstance(task.scheduled_dia_semana, str):
            try:
                data = json.loads(task.scheduled_dia_semana)
                if isinstance(data, list) and len(data) > 0:
                    task.scheduled_dia_semana = data[0]
                else:
                    task.scheduled_dia_semana = None
            except (json.JSONDecodeError, TypeError):
                pass
        
        task.save()


class Migration(migrations.Migration):

    dependencies = [
        ('tareas', '0010_task_scheduled_dia_semana_task_scheduled_hora_inicio_and_more'),
    ]

    operations = [
        migrations.RunPython(convert_days_to_json, reverse_code=convert_json_to_days),
    ]